/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import common.Common;
import Entitys.KhachHang;
import dao.imp.KhachHangDaoImp;
import java.util.List;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Admin
 */
public class KhachHangForm extends javax.swing.JFrame {

    /**
     * Creates new form KhachHangForm
     */
    DefaultTableModel defaultTableModel;

    public KhachHangForm() {
        initComponents();
        setLocationRelativeTo(null);

        defaultTableModel = new DefaultTableModel();
        defaultTableModel.addColumn("Mã KH");
        defaultTableModel.addColumn("Tên KH");
        defaultTableModel.addColumn("Giới Tính");
        defaultTableModel.addColumn("Địa Chỉ");
        defaultTableModel.addColumn("SĐT");
        defaultTableModel.addColumn("CMND");
        defaultTableModel.addColumn("Trạng Thái");

        tblDisplayKH.setModel(defaultTableModel);
        
        defaultTableModel.setRowCount(0); //Xóa hết dữ liệu cũ của bảng
        List<KhachHang> allKhachHang = new KhachHangDaoImp().getAllKhachHang();
        for (KhachHang khachHang : allKhachHang) {
            Object[] objkh = {khachHang.getMaKH(), khachHang.getTenKH(), Common.GioiTinh(khachHang.isGioiTinh()),
                khachHang.getDiaChi(), khachHang.getSDT(), khachHang.getCMND(),Common.TrangThaiKH(khachHang.isTrangThai())};
            defaultTableModel.addRow(objkh);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rdGioiTinh = new javax.swing.ButtonGroup();
        rdTrangThaiKH = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnFindByID = new javax.swing.JButton();
        btnFindByName = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        btnLoadAll = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        txtCMND = new javax.swing.JTextField();
        txtMaKH = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtSDT = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        rdNu = new javax.swing.JRadioButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        rdNam = new javax.swing.JRadioButton();
        txtDiaChi = new javax.swing.JTextField();
        txtTenKH = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        rdDangThue = new javax.swing.JRadioButton();
        rdDaRoiDi = new javax.swing.JRadioButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDisplayKH = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        setSize(new java.awt.Dimension(0, 0));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 153, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/customer.png"))); // NOI18N
        jLabel1.setText("Khách Hàng");

        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.LINE_AXIS));

        btnAdd.setForeground(new java.awt.Color(0, 153, 0));
        btnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/add.png"))); // NOI18N
        btnAdd.setText("Thêm");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        jPanel1.add(btnAdd);

        btnUpdate.setForeground(new java.awt.Color(0, 153, 0));
        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/update.png"))); // NOI18N
        btnUpdate.setText("Sửa");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        jPanel1.add(btnUpdate);

        btnDelete.setForeground(new java.awt.Color(0, 153, 0));
        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/delete.png"))); // NOI18N
        btnDelete.setText("Xóa");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        jPanel1.add(btnDelete);

        btnFindByID.setForeground(new java.awt.Color(0, 153, 0));
        btnFindByID.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/find.png"))); // NOI18N
        btnFindByID.setText("Tìm kiếm theo Mã");
        btnFindByID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindByIDActionPerformed(evt);
            }
        });
        jPanel1.add(btnFindByID);

        btnFindByName.setForeground(new java.awt.Color(0, 153, 0));
        btnFindByName.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/find.png"))); // NOI18N
        btnFindByName.setText("Tìm kiếm theo tên");
        btnFindByName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindByNameActionPerformed(evt);
            }
        });
        jPanel1.add(btnFindByName);

        btnReset.setForeground(new java.awt.Color(0, 153, 0));
        btnReset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/clear.png"))); // NOI18N
        btnReset.setText("Làm Mới");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });
        jPanel1.add(btnReset);

        btnLoadAll.setForeground(new java.awt.Color(0, 153, 0));
        btnLoadAll.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/load.png"))); // NOI18N
        btnLoadAll.setText("Xem Danh sách");
        btnLoadAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoadAllActionPerformed(evt);
            }
        });
        jPanel1.add(btnLoadAll);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 13), new java.awt.Color(0, 153, 0))); // NOI18N

        txtCMND.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        txtMaKH.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 153, 0));
        jLabel2.setText("Mã KH");

        txtSDT.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 153, 0));
        jLabel7.setText("CMND");

        rdGioiTinh.add(rdNu);
        rdNu.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rdNu.setText("Nữ");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 153, 0));
        jLabel6.setText("SĐT");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 153, 0));
        jLabel5.setText("Địa chỉ");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 153, 0));
        jLabel3.setText("Tên KH");

        rdGioiTinh.add(rdNam);
        rdNam.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rdNam.setText("Nam");

        txtDiaChi.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        txtTenKH.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 153, 0));
        jLabel4.setText("Giới tính");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 153, 0));
        jLabel8.setText("Trạng thái");

        rdTrangThaiKH.add(rdDangThue);
        rdDangThue.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rdDangThue.setText("Đang thuê");

        rdTrangThaiKH.add(rdDaRoiDi);
        rdDaRoiDi.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rdDaRoiDi.setText("Đã rời đi");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(txtSDT))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtTenKH, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtMaKH, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(rdNam)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(rdNu))
                                .addComponent(txtDiaChi))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(rdDangThue)
                                .addComponent(txtCMND, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(rdDaRoiDi, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addGap(12, 12, 12))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtMaKH, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTenKH, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rdNam)
                    .addComponent(rdNu))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSDT, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCMND, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rdDangThue)
                    .addComponent(rdDaRoiDi))
                .addContainerGap(66, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Danh sách khách hàng", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 13), new java.awt.Color(0, 153, 0))); // NOI18N

        tblDisplayKH.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblDisplayKH.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDisplayKHMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblDisplayKH);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 577, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 423, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(71, 71, 71)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(341, 341, 341)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 409, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(22, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 936, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(12, 12, 12)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(82, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLoadAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoadAllActionPerformed
        // TODO add your handling code here:
        defaultTableModel.setRowCount(0); //Xóa hết dữ liệu cũ của bảng
        List<KhachHang> allKhachHang = new KhachHangDaoImp().getAllKhachHang();
        for (KhachHang khachHang : allKhachHang) {
            Object[] objkh = {khachHang.getMaKH(), khachHang.getTenKH(), Common.GioiTinh(khachHang.isGioiTinh()),
                khachHang.getDiaChi(), khachHang.getSDT(), khachHang.getCMND(),Common.TrangThaiKH(khachHang.isTrangThai())};
            defaultTableModel.addRow(objkh);
        }
    }//GEN-LAST:event_btnLoadAllActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        String maKH = txtMaKH.getText().trim();
        String tenKH = txtTenKH.getText().trim();
        boolean gioiTinh = false;
        String diaChi = txtDiaChi.getText().trim();
        String sDT = txtSDT.getText().trim();
        String CMND = txtCMND.getText().trim();
        boolean trangThai = false;

        String err = "";
        
        //Mã Khách Hàng
        if (maKH.length() == 0) {
            err += "\nChưa nhập mã khách hàng";
        } else {
            Pattern pat = Pattern.compile("^[KH]{2}+[0-9]{2,}$");
            if (!pat.matcher(maKH).find()) {
                err += "\nChưa đúng định dạng KH**";
            }
            boolean checkMaKH = new KhachHangDaoImp().checkMaKH(maKH);
            if (checkMaKH) {
                err += "\nMã khách hàng đã tồn tại ";
            }
        }
        
        //Tên Khách hàng
        if (tenKH.length() == 0) {
            err += "\nChưa nhập tên khách hàng";
        }
        
        
        //Giới tính
        if (!rdNam.isSelected() && !rdNu.isSelected()) {
            err += "\nChưa chọn giới tính";
        } else {
            if (rdNam.isSelected()) {
                gioiTinh = true;
            } else {
                gioiTinh = false;
            }
        }
        
        
        //Địa chỉ
        if (diaChi.length() == 0) {
            err += "\nChưa nhập địa chỉ khách hàng";
        }
        
        
        //Số điện thoại
        if (sDT.length() == 0) {
            err += "\nChưa nhập số điện thoại";
        } else {
            Pattern pat = Pattern.compile("^[0-9]{10,15}$");
            if (!pat.matcher(sDT).find()) {
                err += "\nSố điện thoại từ 10 đến 15 số";
            }
        }
        
        //CMND
        if (CMND.length() == 0) {
            err += "\nChưa nhập số CMND";
        } else {
            Pattern pat = Pattern.compile("^[0-9]{9,}$");
            if (!pat.matcher(sDT).find()) {
                err += "\nSố CMND phải từ 9 số trở lên";
            }
        }
        //Trạng thái khách hàng
        if (!rdDangThue.isSelected() && !rdDaRoiDi.isSelected()) {
            err += "\nChưa chọn trang thái thuê phòng";
        } else {
            if (rdDangThue.isSelected()) {
                trangThai = true;
            } else {
                trangThai = false;
            }
        }
        
        
        if(err.length()==0){
            KhachHang kh = new KhachHang();
            kh.setMaKH(maKH);
            kh.setTenKH(tenKH);
            kh.setGioiTinh(gioiTinh);
            kh.setDiaChi(diaChi);
            kh.setSDT(sDT);
            kh.setCMND(CMND);
            kh.setTrangThai(trangThai);
            boolean insertKhachHang = new KhachHangDaoImp().insertKhachHang(kh);
            if(insertKhachHang){
                JOptionPane.showMessageDialog(this, "Thêm mới thành công");
                btnLoadAll.doClick();
                btnReset.doClick();
            }else{
                JOptionPane.showMessageDialog(this, "Thêm mới thất bại");
            }
        }else{
            JOptionPane.showMessageDialog(this, err);
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void tblDisplayKHMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDisplayKHMouseClicked
        // TODO add your handling code here:
        txtMaKH.setEditable(false);
        int row = tblDisplayKH.getSelectedRow();
        txtMaKH.setText(tblDisplayKH.getValueAt(row, 0) + "");
        txtTenKH.setText(tblDisplayKH.getValueAt(row, 1) + "");
        if (tblDisplayKH.getValueAt(row, 2) == "Nam") {
            rdNam.setSelected(rootPaneCheckingEnabled);
        } else {
            rdNu.setSelected(rootPaneCheckingEnabled);
        }
        txtDiaChi.setText(tblDisplayKH.getValueAt(row, 3) + "");
        txtSDT.setText(tblDisplayKH.getValueAt(row, 4) + "");
        txtCMND.setText(tblDisplayKH.getValueAt(row, 5) + "");
        if (tblDisplayKH.getValueAt(row, 6) == "Đang thuê") {
            rdDangThue.setSelected(rootPaneCheckingEnabled);
        } else {
            rdDaRoiDi.setSelected(rootPaneCheckingEnabled);
        }
    }//GEN-LAST:event_tblDisplayKHMouseClicked

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
                String maKH = txtMaKH.getText().trim();
        String tenKH = txtTenKH.getText().trim();
        boolean gioiTinh = false;
        String diaChi = txtDiaChi.getText().trim();
        String sDT = txtSDT.getText().trim();
        String CMND = txtCMND.getText().trim();
        boolean trangThai = false;

        String err = "";
        
        //Mã Khách Hàng
        if (maKH.length() == 0) {
            err += "\nChưa nhập mã khách hàng";
        } else {
            Pattern pat = Pattern.compile("^[KH]{2}+[0-9]{2,}$");
            if (!pat.matcher(maKH).find()) {
                err += "\nChưa đúng định dạng KH**";
            }
        }
        
        //Tên Khách hàng
        if (tenKH.length() == 0) {
            err += "\nChưa nhập tên khách hàng";
        }
        
        
        //Giới tính
        if (!rdNam.isSelected() && !rdNu.isSelected()) {
            err += "\nChưa chọn giới tính";
        } else {
            if (rdNam.isSelected()) {
                gioiTinh = true;
            } else {
                gioiTinh = false;
            }
        }
        
        
        //Địa chỉ
        if (diaChi.length() == 0) {
            err += "\nChưa nhập địa chỉ khách hàng";
        }
        
        
        //Số điện thoại
        if (sDT.length() == 0) {
            err += "\nChưa nhập số điện thoại";
        } else {
            Pattern pat = Pattern.compile("^[0-9]{10,15}$");
            if (!pat.matcher(sDT).find()) {
                err += "\nSố điện thoại từ 10 đến 15 số";
            }
        }
        
        //CMND
        if (CMND.length() == 0) {
            err += "\nChưa nhập số CMND";
        } else {
            Pattern pat = Pattern.compile("^[0-9]{9,}$");
            if (!pat.matcher(sDT).find()) {
                err += "\nSố CMND phải từ 9 số trở lên";
            }
        }
        //Trạng thái khách hàng
        if (!rdDangThue.isSelected() && !rdDaRoiDi.isSelected()) {
            err += "\nChưa chọn trang thái thuê phòng";
        } else {
            if (rdDangThue.isSelected()) {
                trangThai = true;
            } else {
                trangThai = false;
            }
        }
        
        
        if(err.length()==0){
            KhachHang kh = new KhachHang();
            kh.setMaKH(maKH);
            kh.setTenKH(tenKH);
            kh.setGioiTinh(gioiTinh);
            kh.setDiaChi(diaChi);
            kh.setSDT(sDT);
            kh.setCMND(CMND);
            kh.setTrangThai(trangThai);
            boolean updateKhachHang = new KhachHangDaoImp().updateKhachHang(kh);
            if(updateKhachHang){
                JOptionPane.showMessageDialog(this, "Sửa mới thành công");
                btnLoadAll.doClick();
                btnReset.doClick();
            }else{
                JOptionPane.showMessageDialog(this, "Sửa mới thất bại");
            }
        }else{
            JOptionPane.showMessageDialog(this, err);
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnFindByIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindByIDActionPerformed
        // TODO add your handling code here:
        txtMaKH.setEditable(false);
        String strMaKH = JOptionPane.showInputDialog("Nhập mã khách hàng cần tìm:");
        if (strMaKH != null && strMaKH.length() > 0) {
            String maKH = String.valueOf(strMaKH);
            KhachHang khachHanh = new KhachHangDaoImp().getKhachHanh(maKH);
            if (khachHanh != null) {
                txtMaKH.setText(khachHanh.getMaKH() + "");
                txtTenKH.setText(khachHanh.getTenKH() + "");
                if (khachHanh.isGioiTinh() == true) {
                    rdNam.setSelected(rootPaneCheckingEnabled);
                } else {
                    rdNu.setSelected(rootPaneCheckingEnabled);
                }
                txtDiaChi.setText(khachHanh.getDiaChi()+"");
                txtSDT.setText(khachHanh.getSDT() + "");
                txtCMND.setText(khachHanh.getCMND()+"");
                if (khachHanh.isTrangThai() == true) {
                    rdDangThue.setSelected(rootPaneCheckingEnabled);
                } else {
                    rdDaRoiDi.setSelected(rootPaneCheckingEnabled);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Không có khách hàng nào mã: " + strMaKH);
            }
        }
    }//GEN-LAST:event_btnFindByIDActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        // TODO add your handling code here:
        txtMaKH.setText("");
        txtTenKH.setText("");
        rdGioiTinh.clearSelection();
        txtDiaChi.setText("");
        txtSDT.setText("");
        txtCMND.setText("");
        txtMaKH.setEditable(true);
        rdTrangThaiKH.clearSelection();
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        String maKH = txtMaKH.getText().trim();
        KhachHang kh = new KhachHang();
        kh.setMaKH(maKH);
        boolean deleteKhachHang = new KhachHangDaoImp().deleteKhachHang(kh);
        if (deleteKhachHang) {
            JOptionPane.showMessageDialog(this, "Xóa thành công");
            btnLoadAll.doClick();
            btnReset.doClick();
        } else {
            JOptionPane.showMessageDialog(this, "Xóa thất bại");
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnFindByNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindByNameActionPerformed
        // TODO add your handling code here:
        String strMaHD = JOptionPane.showInputDialog("Nhập tên khách hàng cần tìm:");

        List<KhachHang> khachHangByName = new KhachHangDaoImp().getKhachHangByName(strMaHD);
        if (khachHangByName == null || khachHangByName.size()==0) {
            JOptionPane.showMessageDialog(this, "Không có hóa đơn  nào mã: " + strMaHD);
        } else {
            defaultTableModel.setRowCount(0);
            for (KhachHang khachHang : khachHangByName) {
                Object[] objkh = {khachHang.getMaKH(), khachHang.getTenKH(), Common.GioiTinh(khachHang.isGioiTinh()),
                khachHang.getDiaChi(), khachHang.getSDT(), khachHang.getCMND(),Common.TrangThaiKH(khachHang.isTrangThai())};
                defaultTableModel.addRow(objkh);
            }
        }
    }//GEN-LAST:event_btnFindByNameActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(KhachHangForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(KhachHangForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(KhachHangForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(KhachHangForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new KhachHangForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnFindByID;
    private javax.swing.JButton btnFindByName;
    private javax.swing.JButton btnLoadAll;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton rdDaRoiDi;
    private javax.swing.JRadioButton rdDangThue;
    private javax.swing.ButtonGroup rdGioiTinh;
    private javax.swing.JRadioButton rdNam;
    private javax.swing.JRadioButton rdNu;
    private javax.swing.ButtonGroup rdTrangThaiKH;
    private javax.swing.JTable tblDisplayKH;
    private javax.swing.JTextField txtCMND;
    private javax.swing.JTextField txtDiaChi;
    private javax.swing.JTextField txtMaKH;
    private javax.swing.JTextField txtSDT;
    private javax.swing.JTextField txtTenKH;
    // End of variables declaration//GEN-END:variables
}
