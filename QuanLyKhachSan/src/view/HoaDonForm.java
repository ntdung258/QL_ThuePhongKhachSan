/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import Entitys.DatPhong;
import Entitys.HoaDon;
import Entitys.HoaDonDTO;
import Entitys.KhachHang;
import Entitys.NhanVien;
import dao.imp.DatPhongDaoImp;
import dao.imp.HoaDonDaoImp;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import dao.imp.NhanVienDaoImp;
import dao.imp.SuDungDVDaoImp;
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.util.regex.Pattern;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Admin
 */
public class HoaDonForm extends javax.swing.JFrame {

    /**
     * Creates new form HoaDonForm
     */
    DefaultTableModel defaultTableModel;

    public HoaDonForm() {
        initComponents();
        setLocationRelativeTo(null);

        defaultTableModel = new DefaultTableModel();
        defaultTableModel.addColumn("Mã hóa Đơn");
        defaultTableModel.addColumn("Mã - Tên khách hàng");
        defaultTableModel.addColumn("Mã - Tên nhân viên");
        defaultTableModel.addColumn("Trạng thái khách hàng");

        tblDisplayHD.setModel(defaultTableModel);

        btnDatPhong.setEnabled(false);
        btnSuDungDV.setEnabled(false);
        btnXemChiTiet.setEnabled(false);
        //Add mã + tên nhân viên vào Combobox
        List<NhanVien> allNhanVien = new NhanVienDaoImp().getAllNhanVien();
        for (NhanVien nhanVien : allNhanVien) {
            cbbMaNV.addItem(nhanVien.getMaNV() + " - " + nhanVien.getTenNV());
        }

        //Add mã+ tên khách hàng vào Combobox
        List<KhachHang> khachHangThue = new HoaDonDaoImp().getKhachHangThue();
        for (KhachHang khachHang : khachHangThue) {
            cbbMaKH.addItem(khachHang.getMaKH() + " - " + khachHang.getTenKH());

        }
        
        defaultTableModel.setRowCount(0); //Xóa hết dữ liệu cũ của bảng
        List<HoaDonDTO> allHoaDon = new HoaDonDaoImp().getALlHoaDon();
        for (HoaDonDTO hoaDon : allHoaDon) {
            Object[] listHD = {hoaDon.getMaHD(), hoaDon.getMaKH() + " - " + hoaDon.getTenKH(), hoaDon.getMaNV() + " - " + hoaDon.getTenNV(), common.Common.TrangThaiKH(hoaDon.isTrangThai())};
            defaultTableModel.addRow(listHD);

        }

    }

    public void close() {
        WindowEvent closeWindow = new WindowEvent(this, WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(closeWindow);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rdThuePhong = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtMaHD = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        cbbMaKH = new javax.swing.JComboBox<>();
        jPanel3 = new javax.swing.JPanel();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        btnLoadAll = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        cbbMaNV = new javax.swing.JComboBox<>();
        btnTimTheoMa = new javax.swing.JButton();
        btnTimTheoTen = new javax.swing.JButton();
        HienThiTheoTenNV = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDisplayHD = new javax.swing.JTable();
        btnDatPhong = new javax.swing.JButton();
        btnSuDungDV = new javax.swing.JButton();
        btnXemChiTiet = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 153, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/bill.png"))); // NOI18N
        jLabel1.setText("Hóa Đơn");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 13), new java.awt.Color(0, 153, 0))); // NOI18N

        jLabel2.setForeground(new java.awt.Color(0, 153, 0));
        jLabel2.setText("Mã Hóa Đơn");

        jLabel3.setForeground(new java.awt.Color(0, 153, 0));
        jLabel3.setText("Mã Khách Hàng");

        cbbMaKH.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Chọn khách hàng" }));

        jPanel3.setLayout(new javax.swing.BoxLayout(jPanel3, javax.swing.BoxLayout.LINE_AXIS));

        btnAdd.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnAdd.setForeground(new java.awt.Color(0, 153, 0));
        btnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/add.png"))); // NOI18N
        btnAdd.setText("Thêm ");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        jPanel3.add(btnAdd);

        btnUpdate.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnUpdate.setForeground(new java.awt.Color(0, 153, 0));
        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/update.png"))); // NOI18N
        btnUpdate.setText("Sửa");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        jPanel3.add(btnUpdate);

        btnDelete.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnDelete.setForeground(new java.awt.Color(0, 153, 0));
        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/delete.png"))); // NOI18N
        btnDelete.setText("Xóa");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        jPanel3.add(btnDelete);

        btnReset.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnReset.setForeground(new java.awt.Color(0, 153, 0));
        btnReset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/clear.png"))); // NOI18N
        btnReset.setText("Làm mới");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });
        jPanel3.add(btnReset);

        btnLoadAll.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnLoadAll.setForeground(new java.awt.Color(0, 153, 0));
        btnLoadAll.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/load.png"))); // NOI18N
        btnLoadAll.setText("Xem Danh sách");
        btnLoadAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoadAllActionPerformed(evt);
            }
        });

        jLabel6.setForeground(new java.awt.Color(0, 153, 0));
        jLabel6.setText("Mã Nhân Viên");

        cbbMaNV.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Chọn nhân viên" }));

        btnTimTheoMa.setForeground(new java.awt.Color(0, 153, 0));
        btnTimTheoMa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/find.png"))); // NOI18N
        btnTimTheoMa.setText("Tìm kiếm theo mã");
        btnTimTheoMa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimTheoMaActionPerformed(evt);
            }
        });

        btnTimTheoTen.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnTimTheoTen.setForeground(new java.awt.Color(0, 153, 0));
        btnTimTheoTen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/find.png"))); // NOI18N
        btnTimTheoTen.setText("Tìm theo tên KH");
        btnTimTheoTen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimTheoTenActionPerformed(evt);
            }
        });

        HienThiTheoTenNV.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        HienThiTheoTenNV.setForeground(new java.awt.Color(0, 153, 0));
        HienThiTheoTenNV.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/load.png"))); // NOI18N
        HienThiTheoTenNV.setText("Hiển thị theo tên NV");
        HienThiTheoTenNV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HienThiTheoTenNVActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(txtMaHD, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(cbbMaKH, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(cbbMaNV, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnLoadAll, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnTimTheoTen, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(HienThiTheoTenNV, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE)
                                    .addComponent(btnTimTheoMa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMaHD, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbbMaKH, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbbMaNV, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(53, 53, 53)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnTimTheoMa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnLoadAll))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(HienThiTheoTenNV)
                    .addComponent(btnTimTheoTen))
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Danh sách, đặt phòng và sử dụng dịch vụ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 13), new java.awt.Color(0, 153, 0))); // NOI18N

        tblDisplayHD.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblDisplayHD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDisplayHDMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblDisplayHD);

        btnDatPhong.setForeground(new java.awt.Color(0, 153, 0));
        btnDatPhong.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/bookRoom.png"))); // NOI18N
        btnDatPhong.setText("Đặt Phòng");
        btnDatPhong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDatPhongActionPerformed(evt);
            }
        });

        btnSuDungDV.setForeground(new java.awt.Color(0, 153, 0));
        btnSuDungDV.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/suDungDV.png"))); // NOI18N
        btnSuDungDV.setText("Sử dụng dịch vụ");
        btnSuDungDV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuDungDVActionPerformed(evt);
            }
        });

        btnXemChiTiet.setForeground(new java.awt.Color(0, 153, 0));
        btnXemChiTiet.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/xemchitiet.png"))); // NOI18N
        btnXemChiTiet.setText("Xem Chi Tiết");
        btnXemChiTiet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXemChiTietActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 588, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnDatPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSuDungDV)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnXemChiTiet, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(7, 7, 7))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 466, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDatPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSuDungDV, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnXemChiTiet, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(388, 388, 388)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(40, 40, 40))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLoadAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoadAllActionPerformed
        // TODO add your handling code here:
        defaultTableModel.setRowCount(0); //Xóa hết dữ liệu cũ của bảng
        List<HoaDonDTO> allHoaDon = new HoaDonDaoImp().getALlHoaDon();
        for (HoaDonDTO hoaDon : allHoaDon) {
            Object[] listHD = {hoaDon.getMaHD(), hoaDon.getMaKH() + " - " + hoaDon.getTenKH(), hoaDon.getMaNV() + " - " + hoaDon.getTenNV(), common.Common.TrangThaiKH(hoaDon.isTrangThai())};
            defaultTableModel.addRow(listHD);

        }

    }//GEN-LAST:event_btnLoadAllActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        String maHD = txtMaHD.getText().trim();
        String[] maKH = null;
        String[] maNV = null;

        String err = "";

        if (maHD.length() == 0) {
            err += "\nChưa nhập mã hóa đơn";
        } else {
            Pattern pat = Pattern.compile("^[HD]{2}+[0-9]{2,}$");
            if (!pat.matcher(maHD).find()) {
                err += "\nChưa đúng định dạng HD**";
            }
            boolean checkMaHD = new HoaDonDaoImp().checkMaHD(maHD);
            if (checkMaHD) {
                err += "\nMã hóa đơn đã tồn tại ";
            }
        }

        String ma_tenKH = (String) cbbMaKH.getSelectedItem();
        if ("Chọn khách hàng".equals(ma_tenKH)) {
            err += "\nKhông được để trống khách hàng";
        } else {
            maKH = ma_tenKH.split(" ");
        }

        String ma_tenNV = (String) cbbMaNV.getSelectedItem();
        if ("Chọn nhân viên".equals(ma_tenNV)) {
            err += "\nKhông được để trống nhân viên";
        } else {
            maNV = ma_tenNV.split(" ");
        }

        if (err.length() == 0) {
            HoaDon hd = new HoaDon();
            hd.setMaHD(maHD);
            hd.setMaKH(maKH[0]);
            hd.setMaNV(maNV[0]);
            boolean hoaDonByMaKH = new DatPhongDaoImp().getHoaDonByMaKH(maKH[0]);
            if (!hoaDonByMaKH) {
                boolean insertHoaDon = new HoaDonDaoImp().insertHoaDon(hd);
                if (insertHoaDon) {
                    JOptionPane.showMessageDialog(this, "Thêm mới thành công");
                    btnLoadAll.doClick();
                    btnReset.doClick();
                } else {
                    JOptionPane.showMessageDialog(this, "Thêm mới thất bại");
                }
            } else {
                JOptionPane.showMessageDialog(this, "Khách hàng đã đc lập hóa đơn");
            }
        } else {
            JOptionPane.showMessageDialog(this, err);
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void tblDisplayHDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDisplayHDMouseClicked
        // TODO add your handling code here:
        txtMaHD.setEditable(false);
        int row = tblDisplayHD.getSelectedRow();
        txtMaHD.setText(tblDisplayHD.getValueAt(row, 0) + "");
        if (tblDisplayHD.getValueAt(row, 3) == "Đã rời đi") {
            cbbMaKH.setSelectedIndex(-1);
        } else {
            cbbMaKH.setSelectedItem(tblDisplayHD.getValueAt(row, 1) + "");
        }
        cbbMaNV.setSelectedItem(tblDisplayHD.getValueAt(row, 2) + "");

        if (tblDisplayHD.getValueAt(row, 3) == "Đang thuê") {
            btnDatPhong.setEnabled(true);
            btnSuDungDV.setEnabled(true);
            btnXemChiTiet.setEnabled(true);
        } else {
            btnDatPhong.setEnabled(false);
            btnSuDungDV.setEnabled(false);
            btnXemChiTiet.setEnabled(true);
        }

    }//GEN-LAST:event_tblDisplayHDMouseClicked

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        String maHD = txtMaHD.getText().trim();
        String[] maKH = null;
        String[] maNV = null;

        String err = "";

        if (maHD.length() == 0) {
            err += "\nChưa nhập mã hóa đơn";
        } else {
            Pattern pat = Pattern.compile("^[HD]{2}+[0-9]{2,}$");
            if (!pat.matcher(maHD).find()) {
                err += "\nChưa đúng định dạng HD**";
            }
        }

        String ma_tenKH = (String) cbbMaKH.getSelectedItem();
        if ("Chọn khách hàng".equals(ma_tenKH)) {
            err += "\nKhông được để trống khách hàng";
        } else {
            maKH = ma_tenKH.split(" ");
        }

        String ma_tenNV = (String) cbbMaNV.getSelectedItem();
        if ("Chọn nhân viên".equals(ma_tenNV)) {
            err += "\nKhông được để trống nhân viên";
        } else {
            maNV = ma_tenNV.split(" ");
        }

        if (err.length() == 0) {
            HoaDon hd = new HoaDon();
            hd.setMaHD(maHD);
            hd.setMaKH(maKH[0]);
            hd.setMaNV(maNV[0]);
            boolean updateHoaDon = new HoaDonDaoImp().updateHoaDon(hd);
            if (updateHoaDon) {
                JOptionPane.showMessageDialog(this, "Sửa thành công");
                btnLoadAll.doClick();
                btnReset.doClick();
            } else {
                JOptionPane.showMessageDialog(this, "Sửa thất bại");
            }
        } else {
            JOptionPane.showMessageDialog(this, err);
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDatPhongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDatPhongActionPerformed
        // TODO add your handling code here:
        int row = tblDisplayHD.getSelectedRow();
        DatPhongForm dpf = new DatPhongForm(txtMaHD.getText(), tblDisplayHD.getValueAt(row, 1) + "", tblDisplayHD.getValueAt(row, 2) + "");
        dpf.setVisible(true);
        dpf.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);

    }//GEN-LAST:event_btnDatPhongActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        // TODO add your handling code here:
        txtMaHD.setEditable(true);
        txtMaHD.setText("");
        rdThuePhong.clearSelection();
        cbbMaKH.setSelectedIndex(0);
        cbbMaNV.setSelectedIndex(0);
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnSuDungDVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuDungDVActionPerformed
        // TODO add your handling code here:
        int row = tblDisplayHD.getSelectedRow();
        SuDungDVForm sddvf = new SuDungDVForm(txtMaHD.getText(), tblDisplayHD.getValueAt(row, 1) + "", tblDisplayHD.getValueAt(row, 2) + "");
        sddvf.setVisible(true);
        sddvf.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }//GEN-LAST:event_btnSuDungDVActionPerformed

    private void btnXemChiTietActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXemChiTietActionPerformed

        int row = tblDisplayHD.getSelectedRow();
        ChiTietForm ctf = new ChiTietForm(txtMaHD.getText(), tblDisplayHD.getValueAt(row, 1) + "", tblDisplayHD.getValueAt(row, 2) + "", tblDisplayHD.getValueAt(row, 3) + "");
        ctf.setVisible(true);
        ctf.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }//GEN-LAST:event_btnXemChiTietActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int n = JOptionPane.showConfirmDialog(
                this,
                "Xóa hóa đơn sẽ xóa luôn cả đặt phòng và sử dụng dịch vụ, bạn có chắc chắn !",
                "Alert",
                JOptionPane.YES_NO_OPTION);
        if (n == JOptionPane.YES_OPTION) {
            String maHD = txtMaHD.getText().trim();
            HoaDon hd = new HoaDon();
            hd.setMaKH(maHD);
            DatPhong maPhong = new DatPhongDaoImp().getMaPhong(maHD);
            boolean updateTrangThaiPhongSangTrong = new DatPhongDaoImp().updateTrangThaiPhongSangTrong(maPhong.getMaP());
            if (updateTrangThaiPhongSangTrong) {
                boolean delete = new DatPhongDaoImp().delete(maHD);
                boolean deleteSuDungDV = new SuDungDVDaoImp().deleteSuDungDV(maHD);
                boolean deleteHoaDon = new HoaDonDaoImp().deleteHoaDon(maHD);
                JOptionPane.showMessageDialog(this, "Xóa thành công");
                btnLoadAll.doClick();
                btnReset.doClick();
            } else {
                boolean delete = new DatPhongDaoImp().delete(maHD);
                boolean deleteSuDungDV = new SuDungDVDaoImp().deleteSuDungDV(maHD);
                boolean deleteHoaDon = new HoaDonDaoImp().deleteHoaDon(maHD);
                JOptionPane.showMessageDialog(this, "Xóa thành công");
                btnLoadAll.doClick();
                btnReset.doClick();
            }
        }


    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnTimTheoTenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimTheoTenActionPerformed
        // TODO add your handling code here:
        String strTenKH = JOptionPane.showInputDialog("Nhập tên khách hàng cần tìm:");

        List<HoaDonDTO> hoaDonByTenKH = new HoaDonDaoImp().getHoaDonByTenKH(strTenKH);
        if (hoaDonByTenKH == null || hoaDonByTenKH.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Không có khách hàng nào tên " + strTenKH);
        } else {
            defaultTableModel.setRowCount(0);
            for (HoaDonDTO hoaDonDTO : hoaDonByTenKH) {
                Object[] listHDDTO = {hoaDonDTO.getMaHD(), hoaDonDTO.getMaKH() + " - " + hoaDonDTO.getTenKH(),
                    hoaDonDTO.getMaNV() + " - " + hoaDonDTO.getTenNV(), common.Common.TrangThaiKH(hoaDonDTO.isTrangThai())};
                defaultTableModel.addRow(listHDDTO);
            }
        }
    }//GEN-LAST:event_btnTimTheoTenActionPerformed

    private void HienThiTheoTenNVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HienThiTheoTenNVActionPerformed
        // TODO add your handling code here:
        String[] maNV = null;
        String ma_tenNV = (String) cbbMaNV.getSelectedItem();
        maNV = ma_tenNV.split(" ");
        List<HoaDonDTO> hoaDonByMaNV = new HoaDonDaoImp().getHoaDonByMaNV(maNV[0]);
        if (hoaDonByMaNV == null || hoaDonByMaNV.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Bạn chưa chọn tên nhân viên");
        } else {
            defaultTableModel.setRowCount(0);
            for (HoaDonDTO hoaDonDTO : hoaDonByMaNV) {
                Object[] listHDDTO = {hoaDonDTO.getMaHD(), hoaDonDTO.getMaKH() + " - " + hoaDonDTO.getTenKH(),
                    hoaDonDTO.getMaNV() + " - " + hoaDonDTO.getTenNV(), common.Common.TrangThaiKH(hoaDonDTO.isTrangThai())};
                defaultTableModel.addRow(listHDDTO);
            }
        }
    }//GEN-LAST:event_HienThiTheoTenNVActionPerformed

    private void btnTimTheoMaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimTheoMaActionPerformed
        // TODO add your handling code here:
        String strMaHD = JOptionPane.showInputDialog("Nhập mã hóa đơn  cần tìm:");

        List<HoaDonDTO> hoaDonByMa = new HoaDonDaoImp().getHoaDonByMa(strMaHD);
        if (hoaDonByMa == null || hoaDonByMa.size() == 0) {
            JOptionPane.showMessageDialog(this, "Không có hóa đơn  nào mã: " + strMaHD);
        } else {
            defaultTableModel.setRowCount(0);
            for (HoaDonDTO hoaDonDTO : hoaDonByMa) {
                Object[] listHDDTO = {hoaDonDTO.getMaHD(), hoaDonDTO.getMaKH() + " - " + hoaDonDTO.getTenKH(),
                    hoaDonDTO.getMaNV() + " - " + hoaDonDTO.getTenNV(), common.Common.TrangThaiKH(hoaDonDTO.isTrangThai())};
                defaultTableModel.addRow(listHDDTO);
            }
        }
    }//GEN-LAST:event_btnTimTheoMaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HoaDonForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HoaDonForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HoaDonForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HoaDonForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HoaDonForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton HienThiTheoTenNV;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDatPhong;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnLoadAll;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSuDungDV;
    private javax.swing.JButton btnTimTheoMa;
    private javax.swing.JButton btnTimTheoTen;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnXemChiTiet;
    private javax.swing.JComboBox<String> cbbMaKH;
    private javax.swing.JComboBox<String> cbbMaNV;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.ButtonGroup rdThuePhong;
    private javax.swing.JTable tblDisplayHD;
    private javax.swing.JTextField txtMaHD;
    // End of variables declaration//GEN-END:variables

}
