/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import Entitys.DichVu;
import Entitys.Phong;
import common.Common;
import dao.imp.DichVuDaoImp;
import dao.imp.PhongDaoImp;
import java.text.NumberFormat;
import java.util.List;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Admin
 */
public class PhongForm extends javax.swing.JFrame {

    /**
     * Creates new form PhongForm
     */
    DefaultTableModel defaultTableModel;

    public PhongForm() {
        initComponents();
        setLocationRelativeTo(null);

        defaultTableModel = new DefaultTableModel();
        defaultTableModel.addColumn("Mã Phòng");
        defaultTableModel.addColumn("Tên Phòng");
        defaultTableModel.addColumn("Giá Tiền");
        defaultTableModel.addColumn("Trạng Thái");

        tblDisplayP.setModel(defaultTableModel);
        
        defaultTableModel.setRowCount(0); //Xóa hết dữ liệu cũ của bảng
        List<Phong> allPhong = new PhongDaoImp().getAllPhong();
        for (Phong phong : allPhong) {
            Object[] objp ={phong.getMaP(),phong.getTenP(),Common.FormatNumber(phong.getGia()),Common.TrangThai(phong.isTrangThai())};
            defaultTableModel.addRow(objp);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rdTrangThai = new javax.swing.ButtonGroup();
        jToggleButton1 = new javax.swing.JToggleButton();
        jLabel1 = new javax.swing.JLabel();
        jpnButton = new javax.swing.JPanel();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnFindById = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        btnLoadAll = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtMaP = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtTenP = new javax.swing.JTextField();
        txtGia = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        rdTrong = new javax.swing.JRadioButton();
        rdDangSD = new javax.swing.JRadioButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDisplayP = new javax.swing.JTable();

        jToggleButton1.setText("jToggleButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 153, 0));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/room.png"))); // NOI18N
        jLabel1.setText("Phòng");

        jpnButton.setLayout(new javax.swing.BoxLayout(jpnButton, javax.swing.BoxLayout.LINE_AXIS));

        btnAdd.setForeground(new java.awt.Color(0, 153, 0));
        btnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/add.png"))); // NOI18N
        btnAdd.setText("Thêm");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        jpnButton.add(btnAdd);

        btnUpdate.setForeground(new java.awt.Color(0, 153, 0));
        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/update.png"))); // NOI18N
        btnUpdate.setText("Sửa");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        jpnButton.add(btnUpdate);

        btnDelete.setForeground(new java.awt.Color(0, 153, 0));
        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/delete.png"))); // NOI18N
        btnDelete.setText("Xóa");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        jpnButton.add(btnDelete);

        btnFindById.setForeground(new java.awt.Color(0, 153, 0));
        btnFindById.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/find.png"))); // NOI18N
        btnFindById.setText("Tìm kiếm theo mã");
        btnFindById.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindByIdActionPerformed(evt);
            }
        });
        jpnButton.add(btnFindById);

        btnReset.setForeground(new java.awt.Color(0, 153, 0));
        btnReset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/clear.png"))); // NOI18N
        btnReset.setText("Làm mới");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });
        jpnButton.add(btnReset);

        btnLoadAll.setForeground(new java.awt.Color(0, 153, 0));
        btnLoadAll.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/load.png"))); // NOI18N
        btnLoadAll.setText("Xem danh sách");
        btnLoadAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoadAllActionPerformed(evt);
            }
        });
        jpnButton.add(btnLoadAll);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 13), new java.awt.Color(0, 153, 0))); // NOI18N

        jLabel2.setForeground(new java.awt.Color(0, 153, 0));
        jLabel2.setText("Mã Phòng");

        jLabel3.setForeground(new java.awt.Color(0, 153, 0));
        jLabel3.setText("Tên Phòng");

        jLabel4.setForeground(new java.awt.Color(0, 153, 0));
        jLabel4.setText("Giá/Ngày");

        jLabel5.setForeground(new java.awt.Color(0, 153, 0));
        jLabel5.setText("Trạng thái");

        rdTrangThai.add(rdTrong);
        rdTrong.setText("Trống");

        rdTrangThai.add(rdDangSD);
        rdDangSD.setText("Đang sử dụng");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtMaP))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTenP, javax.swing.GroupLayout.DEFAULT_SIZE, 296, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtGia, javax.swing.GroupLayout.DEFAULT_SIZE, 296, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rdTrong)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(rdDangSD)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMaP, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTenP, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtGia, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rdTrong)
                    .addComponent(rdDangSD))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Danh sách phòng", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 13), new java.awt.Color(0, 153, 0))); // NOI18N

        tblDisplayP.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblDisplayP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDisplayPMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblDisplayP);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 536, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 459, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(369, 369, 369))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jpnButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(188, 188, 188))))
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 25, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jpnButton, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 502, Short.MAX_VALUE))
                .addContainerGap(48, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLoadAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoadAllActionPerformed
        // TODO add your handling code here:
        defaultTableModel.setRowCount(0); //Xóa hết dữ liệu cũ của bảng
        List<Phong> allPhong = new PhongDaoImp().getAllPhong();
        for (Phong phong : allPhong) {
            Object[] objp ={phong.getMaP(),phong.getTenP(),Common.FormatNumber(phong.getGia()),Common.TrangThai(phong.isTrangThai())};
            defaultTableModel.addRow(objp);
        }
    }//GEN-LAST:event_btnLoadAllActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        String maP = txtMaP.getText().trim();
        String tenP = txtTenP.getText().trim();
        String giaTien = txtGia.getText().trim();
        boolean trangThai = false;
        

        String err = "";

        if (maP.length() == 0) {
            err += "\nChưa nhập mã phòng";
        } else {
            Pattern pat = Pattern.compile("^[P]{1}+[0-9]{2,}$");
            if (!pat.matcher(maP).find()) {
                err += "\nChưa đúng định dạng P**";
            }
            boolean checkMaPhong = new PhongDaoImp().checkMaPhong(maP);
            if (checkMaPhong) {
                err += "\nMã phòng đã tồn tại ";
            }
        }

        if (tenP.length() == 0) {
            err += "\nChưa nhập tên phòng";
        }
        
        float GiaTien = 0;
        if (giaTien.length() == 0) {
            err += "\nChưa nhập giá tiền ";
        } else {
            try {
                giaTien = giaTien.replaceAll(",", "");
                GiaTien = Float.parseFloat(giaTien);
                if (GiaTien < 0) {
                    err += "\nGiá Tiền phải là số dương";
                }
            } catch (Exception e) {
                err += "\nGiá tiền phải là số";
            }
        }

        if (!rdTrong.isSelected() && !rdDangSD.isSelected()) {
            err += "\nChưa chọn trạng thái phòng";
        } else {
            if (rdTrong.isSelected()) {
                trangThai = true;
            } else {
                trangThai = false;
            }
        }

        

        

        if (err.length() == 0) {
            Phong p = new Phong();
            p.setMaP(maP);
            p.setTenP(tenP);
            p.setGia(GiaTien);
            p.setTrangThai(trangThai);
            boolean insertPhong = new PhongDaoImp().insertPhong(p);
            if (insertPhong) {
                JOptionPane.showMessageDialog(this, "Thêm mới thành công");
                btnLoadAll.doClick();
                btnReset.doClick();
            } else {
                JOptionPane.showMessageDialog(this, "Thêm mới thất bại");
            }
        } else {
            JOptionPane.showMessageDialog(this, err);
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void tblDisplayPMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDisplayPMouseClicked
        // TODO add your handling code here:
        txtMaP.setEditable(false);
        int row = tblDisplayP.getSelectedRow();
        txtMaP.setText(tblDisplayP.getValueAt(row, 0) + "");
        txtTenP.setText(tblDisplayP.getValueAt(row, 1) + "");
        txtGia.setText(tblDisplayP.getValueAt(row, 2) + "");
        if (tblDisplayP.getValueAt(row, 3) == "Trống") {
            rdTrong.setSelected(rootPaneCheckingEnabled);
        } else {
            rdDangSD.setSelected(rootPaneCheckingEnabled);
        }
    }//GEN-LAST:event_tblDisplayPMouseClicked

    private void btnFindByIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindByIdActionPerformed
        // TODO add your handling code here:
        txtMaP.setEditable(false);
        String strMaP = JOptionPane.showInputDialog("Nhập mã phòng cần tìm:");
        if (strMaP != null && strMaP.length() > 0) {
            String maP = String.valueOf(strMaP);
            Phong maPhong = new PhongDaoImp().getMaPhong(maP);
            if (maPhong!= null) {
                txtMaP.setText(maPhong.getMaP() + "");
                txtTenP.setText(maPhong.getTenP() + "");
                txtGia.setText(common.Common.FormatNumber(maPhong.getGia()) + "");
                if (maPhong.isTrangThai() == true) {
                    rdTrong.setSelected(rootPaneCheckingEnabled);
                } else {
                    rdDangSD.setSelected(rootPaneCheckingEnabled);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Không có phòng nào mã: " + strMaP);
            }
        }
    }//GEN-LAST:event_btnFindByIdActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        String maP = txtMaP.getText().trim();
        String tenP = txtTenP.getText().trim();
        String giaTien = txtGia.getText().trim();
        boolean trangThai = false;
        txtMaP.setEditable(false);

        String err = "";

        if (maP.length() == 0) {
            err += "\nChưa nhập mã phòng";
        } else {
            Pattern pat = Pattern.compile("^[P]{1}+[0-9]{2,}$");
            if (!pat.matcher(maP).find()) {
                err += "\nChưa đúng định dạng P**";
            }
            
        }

        if (tenP.length() == 0) {
            err += "\nChưa nhập tên phòng";
        }
        
        float GiaTien = 0;
        if (giaTien.length() == 0) {
            err += "\nChưa nhập giá tiền ";
        } else {
            try {
                giaTien = giaTien.replaceAll(",", "");
                GiaTien = Float.parseFloat(giaTien);
                if (GiaTien < 0) {
                    err += "\nGiá Tiền phải là số dương";
                }
            } catch (Exception e) {
                err += "\nGiá tiền phải là số";
            }
        }

        if (!rdTrong.isSelected() && !rdDangSD.isSelected()) {
            err += "\nChưa chọn trạng thái phòng";
        } else {
            if (rdTrong.isSelected()) {
                trangThai = true;
            } else {
                trangThai = false;
            }
        }

        

        

        if (err.length() == 0) {
            Phong p = new Phong();
            p.setMaP(maP);
            p.setTenP(tenP);
            p.setGia(GiaTien);
            p.setTrangThai(trangThai);
            boolean updatePhong = new PhongDaoImp().updatePhong(p);
            if (updatePhong) {
                JOptionPane.showMessageDialog(this, "Sửa mới thành công");
                btnLoadAll.doClick();
                btnReset.doClick();
            } else {
                JOptionPane.showMessageDialog(this, "Sửa mới thất bại");
            }
        } else {
            JOptionPane.showMessageDialog(this, err);
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        // TODO add your handling code here:
        txtMaP.setText("");
        txtTenP.setText("");
        txtGia.setText("");
        rdTrangThai.clearSelection();
        txtMaP.setEditable(true);
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        String maP = txtMaP.getText().trim();
        Phong p = new Phong();
        p.setMaP(maP);
        boolean deletePhong = new PhongDaoImp().deletePhong(p);
        if (deletePhong) {
            JOptionPane.showMessageDialog(this, "Xóa thành công");
            btnLoadAll.doClick();
            btnReset.doClick();
        } else {
            JOptionPane.showMessageDialog(this, "Xóa thất bại");
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PhongForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PhongForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PhongForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PhongForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PhongForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnFindById;
    private javax.swing.JButton btnLoadAll;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JPanel jpnButton;
    private javax.swing.JRadioButton rdDangSD;
    private javax.swing.ButtonGroup rdTrangThai;
    private javax.swing.JRadioButton rdTrong;
    private javax.swing.JTable tblDisplayP;
    private javax.swing.JTextField txtGia;
    private javax.swing.JTextField txtMaP;
    private javax.swing.JTextField txtTenP;
    // End of variables declaration//GEN-END:variables
}
